@model kalea2.Models.Reserva


@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (ViewBag.Mensaje != null)
{

    <body onload="My_onLoad('@ViewBag.Mensaje')">
    </body>
}


<head>
    <link rel="stylesheet" href="~/Content/assets/css/maps.css">
</head>

<div class="main-content d-flex flex-column flex-md-row">
    <div class="container-fluid">
        <div class="row">
            @using (Html.BeginForm())
            {
                <div class="col-12">

                    <!-- Invoice Header -->
                    <div class="invoice-details-header bg-white d-flex align-items-sm-center flex-column flex-sm-row mb-30 justify-content-sm-between">
                        <div class="d-flex align-items-center">
                            <a href="#" class="mr-2"><img src="~/Content/assets/img/svg/angle-left.svg" alt="" class="svg"></a>
                            <h2 class="regular mr-3 font-30">Reserva de espacio definitivo</h2>
                        </div>

                        <div class="invoice-header-right d-flex align-items-center justify-content-around justify-content-sm-end mt-3 mt-sm-0">

                        </div>
                    </div>
                    <!-- End Invoice Header -->
                    <!-- Invoice Top -->
                    <div class="invoice-pd c2-bg" data-bg-img="~/../../Content/assets/img/media/invoice-pattern.png">
                        <div class="row">
                            <div class="col-md-3">
                                <!-- Invoice Right -->
                                <div class="invoice-right mt-5 mt-md-0">
                                    <h3 class="white font-20 mb-3">Entrega</h3>
                                    <ul class="status-list">
                                        <li>
                                            <span class="key font-14">Entrega No:</span>
                                            <span class="white bold font-17"></span>
                                            <div class="col-md-12">
                                                @Html.EditorFor(modelItem => Model.Id, new { htmlAttributes = new { @class = "theme-input-style style--four", @readonly = "true" } })
                                            </div>
                                        </li>
                                        <li>
                                            @Html.LabelFor(model => model.FechaEntrega2, htmlAttributes: new { @class = "key font-14" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.FechaEntrega2, new { htmlAttributes = new { @class = "theme-input-style style--four" } })
                                                <div class="col-md-12">
                                                    @Html.ValidationMessageFor(model => model.FechaEntrega2, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </li>
                                        <li>
                                            @Html.LabelFor(model => model.FechaRestriccionInicio, htmlAttributes: new { @class = "key font-14" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.FechaRestriccionInicio, new { htmlAttributes = new { @class = "theme-input-style style--four" } })
                                                <div class="col-md-12">
                                                    @Html.ValidationMessageFor(model => model.FechaRestriccionInicio, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            @*<input type="text" id="default-date" placeholder="28 October 2019" />*@
                                        </li>
                                        <li>
                                            @*<span class="key font-14">Fecha:</span>*@

                                            @Html.LabelFor(model => model.FechaRestriccionFin, htmlAttributes: new { @class = "key font-14" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.FechaRestriccionFin, new { htmlAttributes = new { @class = "theme-input-style style--four" } })
                                                @Html.ValidationMessageFor(model => model.FechaRestriccionFin, "", new { @class = "text-danger" })
                                            </div>
                                            @*<input type="text" id="default-date" placeholder="28 October 2019" />*@
                                        </li>

                                    </ul>
                                </div>
                                <!-- End Invoice Right -->
                            </div>
                            <div class="col-md-3">
                                <!-- Invoice Right -->
                                <div class="invoice-right mt-5 mt-md-0">
                                    <h3 class="white font-20 mb-3">Horarios</h3>

                                    <ul class="status-list">
                                        <li>
                                            @Html.LabelFor(model => model.FechaInicio, htmlAttributes: new { @class = "key font-14" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.FechaInicio, new { htmlAttributes = new { @class = "theme-input-style style--four", @readonly = "true" } })
                                                @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
                                            </div>
                                        </li>
                                        <li>
                                            @Html.LabelFor(model => model.FechaFin, htmlAttributes: new { @class = "key font-14" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.FechaFin, new { htmlAttributes = new { @class = "theme-input-style style--four", @readonly = "true" } })
                                                @Html.ValidationMessageFor(model => model.FechaFin, "", new { @class = "text-danger" })
                                            </div>
                                            @*<input type="text" id="default-date" placeholder="28 October 2019" />*@
                                        </li>
                                        <li>
                                            <span class="key font-14">Tiempo armado(min):</span>
                                            <span class="white bold font-17"></span>
                                            <div class="col-md-12">
                                                @Html.EditorFor(modelItem => Model.TiempoArmado, new { htmlAttributes = new { @class = "theme-input-style style--four" } })
                                                @Html.ValidationMessageFor(model => model.TiempoArmado, "", new { @class = "text-danger" })
                                            </div>
                                        </li>
                                        <li>
                                            <span class="key">Requiere instalación?</span>
                                            <div class="col-md-12">
                                                @Html.DropDownListFor(modelItem => modelItem.TipoDeInstalacion, Model.TiposDeInstalacion, " -- Seleccione --", new { @class = "theme-input-style style--four" })
                                                @Html.ValidationMessageFor(model => model.TipoDeInstalacion, "", new { @class = "text-danger" })
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                                <!-- End Invoice Right -->
                            </div>
                            <div class="col-md-3">
                                <div class="invoice-right mt-5 mt-md-0">
                                    <h3 class="white font-20 mb-3">Datos de cliente:</h3>
                                    <ul class="status-list">
                                        <li>
                                            <span class="key">Nombre</span>
                                            @Html.EditorFor(model => model.NombreCliente, new { htmlAttributes = new { @class = "theme-input-style style--four" } })
                                            @Html.ValidationMessageFor(model => model.NombreCliente, "", new { @class = "text-danger" })
                                        </li>
                                        <li>
                                            <span class="key">P. Recibe</span>
                                            @Html.EditorFor(model => model.PersonaRecepcion, new { htmlAttributes = new { @class = "theme-input-style style--four" } })
                                            @Html.ValidationMessageFor(model => model.PersonaRecepcion, "", new { @class = "text-danger" })
                                        </li>
                                        <li>
                                            <span class="key">Telefono</span>
                                            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "theme-input-style style--four" } })
                                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                                        </li>
                                        <li>
                                            <span class="key">Celular</span>
                                            @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "theme-input-style style--four" } })
                                            @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                                        </li>

                                    </ul>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="invoice-right mt-5 mt-md-0">
                                    <h3 class="white font-20 mb-3">Direcciones:</h3>
                                    <ul class="status-list">
                                        <li>
                                            <span class="key">Entrega</span>
                                            @Html.EditorFor(model => model.DireccionEntrega, new { htmlAttributes = new { @class = "theme-input-style style--four" } })
                                            @Html.ValidationMessageFor(model => model.DireccionEntrega, "", new { @class = "text-danger" })
                                        </li>
                                        <li>
                                            <span class="key">Fiscal</span>
                                            @Html.EditorFor(model => model.DireccionFiscal, new { htmlAttributes = new { @class = "theme-input-style style--four" } })
                                            @Html.ValidationMessageFor(model => model.DireccionFiscal, "", new { @class = "text-danger" })
                                        </li>
                                        <li>
                                            <span class="key">Zona</span>
                                            @Html.EditorFor(model => model.ZonaDireccion, new { htmlAttributes = new { @class = "theme-input-style style--four" } })
                                            @Html.ValidationMessageFor(model => model.ZonaDireccion, "", new { @class = "text-danger" })
                                        </li>
                                        <li>
                                            <span class="key">Localización</span>
                                            @Html.EditorFor(model => model.Geolocalizacion, new { htmlAttributes = new { @class = "theme-input-style style--four" } })
                                            @Html.ValidationMessageFor(model => model.Geolocalizacion, "", new { @class = "text-danger" })
                                        </li>

                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- End Invoice Top -->
                    <!-- Invois Wrapper -->
                    <div class="bg-white invoice-pd">
                        <div class="row">

                            <!--<div class="col-xl-4 col-md-6">-->
                                <!-- Invoice Payment Details -->
                                <!--<div class="invoice edit payment-details mt-5 mt-xl-0">
                                    <div class="invoice-title c4 bold font-14 mb-3">Datos de cliente:</div>

                                    <ul class="status-list">
                                        <li>
                                            <span class="key">Nombre</span>
                                            @Html.EditorFor(model => model.NombreCliente, new { htmlAttributes = new { @class = "theme-input-style style--three" } })
                                            @Html.ValidationMessageFor(model => model.NombreCliente, "", new { @class = "text-danger" })
                                        </li>
                                        <li>
                                            <span class="key">Telefono</span>
                                            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "theme-input-style style--three" } })
                                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                                        </li>
                                        <li>
                                            <span class="key">Celular</span>
                                            @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "theme-input-style style--three" } })
                                            @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                                        </li>

                                    </ul>
                                </div>-->
                                <!-- End Invoice Payment Details -->
                            <!--</div>

                            <div class="col-xl-4 col-md-6">-->
                                <!-- Invoice Payment Details -->
                                <!--<div class="invoice edit payment-details mt-5 mt-xl-0">
                                    <div class="invoice-title c4 bold font-14 mb-3">Direcciones:</div>

                                    <ul class="status-list">
                                        <li>
                                            <span class="key">Entrega</span>
                                            @Html.EditorFor(model => model.DireccionEntrega, new { htmlAttributes = new { @class = "theme-input-style style--three" } })
                                            @Html.ValidationMessageFor(model => model.DireccionEntrega, "", new { @class = "text-danger" })
                                        </li>
                                        <li>
                                            <span class="key">Fiscal</span>
                                            @Html.EditorFor(model => model.DireccionFiscal, new { htmlAttributes = new { @class = "theme-input-style style--three" } })
                                            @Html.ValidationMessageFor(model => model.DireccionFiscal, "", new { @class = "text-danger" })
                                        </li>
                                        <li>
                                            <span class="key">Localización</span>
                                            @Html.EditorFor(model => model.Geolocalizacion, new { htmlAttributes = new { @class = "theme-input-style style--three" } })
                                            @Html.ValidationMessageFor(model => model.Geolocalizacion, "", new { @class = "text-danger" })
                                        </li>

                                    </ul>
                                </div>-->
                                <!-- End Invoice Payment Details -->
                            <!--</div>-->




                            <div class="col-xl-4 col-md-6">
                                <!-- Invoice Payment Details -->
                                <div class="invoice edit payment-details mt-5 mt-xl-0">
                                    <div class="invoice-title c4 bold font-14 mb-3">Observaciones:</div>

                                    <ul class="status-list">
                                        <li>
                                            @Html.EditorFor(model => model.ComentariosVenta, new { htmlAttributes = new { @class = "theme-input-style" } })
                                        </li>

                                    </ul>

                                </div>

                                <!-- End Invoice Payment Details -->
                            </div>

                            <div class="col-xl-4 col-md-6 mt-10">
                                <!-- Invoice Payment Details -->
                                <div class="invoice edit payment-details mt-5 mt-xl-0">
                                    <div class="invoice-title c4 bold font-14 mb-3">Observaciones torre:</div>

                                    <ul class="status-list">
                                        <li>
                                            @Html.EditorFor(model => model.ComentariosTorre, new { htmlAttributes = new { @class = "theme-input-style", cols = 35, @rows = 3 } })
                                            @Html.HiddenFor(model => model.Vehiculo)
                                            @Html.HiddenFor(model => model.NumVehiculo)
                                        </li>

                                    </ul>
                                </div>

                            </div>

                            <div class="col-xl-4 col-md-4 mt-10">
                                <!-- Invoice Payment Details -->
                                <div class="invoice edit payment-details mt-5 mt-xl-0">
                                    <div class="invoice-title c4 bold font-14 mb-3">
                                        Mapa:
                                        <input id="pac-input" class="controls" type="text" placeholder="Buscador de direcciones" />
                                        <div class="mt-2" style="width:100%;height:500px" id="map"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white invoice-pd">
                        <div class="row">
                            <div class="col-xl-4 col-md-12">
                                <!-- Invoice Payment Details -->
                                <div class="invoice edit payment-details mt-5 mt-xl-0">
                                    <div class="invoice-title c4 bold font-14 mb-3">Seleccione un evento:</div>
                                    <ul class="status-list">
                                        <li>
                                            <div class="col-md-6">
                                                <div id="divEventos" style="width:100%;">
                                                    <select class='mi-selector' id="evento" name='evento' style="width:100%;">
                                                        <option value="">  -- Seleccione -- </option>

                                                        @foreach (var item in @Model.Eventos_Articulos)
                                                        {
                                                            <option value="@item.Value"> @item.Value </option>
                                                        }
                                                    </select>
                                                </div>
                                                @*@Html.DropDownListFor(modelItem => modelItem.NumEvento, Model.Eventos_Articulos, " -- Eventos pendientes de programar --", new { @class = "theme-input-style" })*@
                                                @Html.HiddenFor(modelItem => modelItem.Eventos_Articulos)


                                            </div>
                                            <div class="col-md-6">
                                                <a id="AgregarLinea" class="btn long" style="color:white">Agregar</a>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="button-group pt-2">
                                            </div>
                                        </li>
                                    </ul>

                                </div>
                                <!-- End Invoice Payment Details -->
                            </div>
                        </div>
                    </div>
                    <!-- End Invois Wrapper -->
                    <!-- Invoice Details List Wrapper -->
                    <div class="bg-white details-list-wrap">
                        <div class="table-responsive position-relative repeater-default pb-4">
                            <!-- Invoice List Table -->
                            <table id="invoice-edit-list-table" class="invoice-list-table style-two text-nowrap">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Evento</th>
                                        <th>Articulo</th>
                                        <th><span>Descripcion</span></th>
                                        <th><span>Cantidad</span></th>
                                        @*<th><span>Tiempo Armado</span></th>
                                            <th><span>Remisionado</span></th>
                                            <th><span>Estado</span></th>*@
                                        <th><span>Accion</span></th>
                                    </tr>
                                </thead>

                                <tbody data-repeater-list="group-a" class="bg-white" id="tbodyArticulos">

                                    @for (int i = 0; i < Model.Reserva_Articulos.Count; i++)
                                    {
                                        <tr class="Articulos" data-repeater-item>
                                            <td class="bold">
                                                @Html.DisplayFor(m => Model.Reserva_Articulos[i].Id)
                                                @Html.HiddenFor(m => Model.Reserva_Articulos[i].Id)
                                            </td>
                                            <td class="NumEvento">
                                                @Html.DisplayFor(m => Model.Reserva_Articulos[i].NumEvento)
                                                @Html.HiddenFor(m => Model.Reserva_Articulos[i].NumEvento)
                                            </td>
                                            <td class="CodigoArticulo">
                                                @Html.DisplayFor(m => Model.Reserva_Articulos[i].CodigoArticulo)
                                                @Html.HiddenFor(m => Model.Reserva_Articulos[i].CodigoArticulo)
                                            </td>
                                            <td class="Descripcion">
                                                @Html.DisplayFor(m => Model.Reserva_Articulos[i].Descripcion)
                                                @Html.HiddenFor(m => Model.Reserva_Articulos[i].Descripcion)
                                            </td>
                                            <td class="Cantidad">
                                                @Html.DisplayFor(m => Model.Reserva_Articulos[i].Cantidad)
                                                @Html.HiddenFor(m => Model.Reserva_Articulos[i].Cantidad)
                                                @Html.HiddenFor(m => Model.Reserva_Articulos[i].TiempoArmado)
                                                @Html.HiddenFor(m => Model.Reserva_Articulos[i].EstadoArticulo)
                                                @Html.HiddenFor(m => Model.Reserva_Articulos[i].NumEvento)
                                            </td>
                                            <td class="TiempoArmado" style="display:none;">
                                                @Html.DisplayFor(m => Model.Reserva_Articulos[i].TiempoArmado)
                                                @Html.HiddenFor(m => Model.Reserva_Articulos[i].TiempoArmado)
                                            </td>
                                            <td class="Remisionado" style="display:none;">
                                                @Html.DisplayFor(m => Model.Reserva_Articulos[i].Remisionado)
                                                @Html.HiddenFor(m => Model.Reserva_Articulos[i].Remisionado)
                                            </td>
                                            <td class="EstadoArticulo" style="display:none;">
                                                @Html.DisplayFor(m => Model.Reserva_Articulos[i].EstadoArticulo)
                                                @Html.HiddenFor(m => Model.Reserva_Articulos[i].EstadoArticulo)
                                                @Html.HiddenFor(m => Model.Reserva_Articulos[i].NumEvento)
                                            </td>
                                            <td class="text-right">
                                                <a type="button" id="EliminarLinea" class="tr-close" data-toggle="tooltip" data-placement="top" data-original-title="Eliminar" onclick='productDelete(this);'>
                                                    <i class="icofont-close"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                            <!-- End Invoice List Table -->
                        </div>

                        <!-- Cart Collaterals -->
                        <div class="cart-collaterals style--two pt-4 pt-xl-0">
                            <div class="cart_totals calculated_shipping">
                            </div>
                        </div>
                        <!-- End Cart Collaterals -->
                    </div>


                    <div class="bg-white invoice-pd">
                        <div class="row">

                            <div class="col-xl-4 col-md-12">
                                <!-- Invoice Payment Details -->
                                <div class="invoice edit payment-details mt-5 mt-xl-0">
                                    <div class="invoice-title c4 bold font-14 mb-3">Seleccione un caso:</div>

                                    <ul class="status-list">
                                        <li>
                                            <div class="col-md-6">
                                                <div id="divCasos" style="width:100%;">
                                                    <select class='mi-selector' id="caso" name='evento' style="width:100%;">
                                                        <option value="">  -- Seleccione -- </option>

                                                        @foreach (var item in @Model.Casos_Pendientes)
                                                        {
                                                            <option value="@item.Value"> @item.Value </option>
                                                        }
                                                    </select>
                                                </div>
                                                @*@Html.DropDownListFor(modelItem => modelItem.Casos_Pendientes, Model.Casos_Pendientes, " -- Casos pendientes de programar --", new { @class = "theme-input-style" })*@
                                            </div>
                                            <div class="col-md-6">
                                                <a id="AgregarLinea2" class="btn long" style="color:white">Agregar</a>
                                            </div>

                                        </li>
                                        <li>
                                            <div class="button-group pt-2">


                                            </div>
                                        </li>

                                    </ul>

                                </div>

                                <!-- End Invoice Payment Details -->
                            </div>
                        </div>
                    </div>

                    <div class="bg-white details-list-wrap">
                        <div class="table-responsive position-relative repeater-default pb-4">
                            <!-- Invoice List Table -->
                            <table id="invoice-edit-list-table2" class="invoice-list-table style-two text-nowrap">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th style="text-align:left">Caso</th>
                                        @*<th style="text-align:left"><span style="text-align:left">Observaciones</span></th>*@
                                        <th style="text-align:left"><span style="text-align:left">Acciones</span></th>
                                        <th style="text-align:left"><span style="text-align:left">Accion</span></th>
                                    </tr>
                                </thead>

                                <tbody data-repeater-list="group-a" class="bg-white" id="TablaCasos">

                                    @for (int i = 0; i < Model.Reserva_Casos.Count; i++)
                                    {
                                        <tr class="Casos" data-repeater-item>
                                            <td class="bold">
                                                @Html.DisplayFor(m => Model.Reserva_Casos[i].Id)
                                                @Html.HiddenFor(m => Model.Reserva_Casos[i].Id)
                                            </td>
                                            <td class="Numcaso">
                                                @Html.DisplayFor(m => Model.Reserva_Casos[i].NumCaso)
                                                @Html.HiddenFor(m => Model.Reserva_Casos[i].NumCaso)
                                            </td>
                                            @*<td>
                                                    @Html.DisplayFor(m => Model.Reserva_Casos[i].Observaciones)
                                                    @Html.HiddenFor(m => Model.Reserva_Casos[i].Observaciones)
                                                </td>*@
                                            <td class="Acciones">
                                                @Html.TextAreaFor(m => Model.Reserva_Casos[i].Acciones, new { @class = "theme-input-style style--three" })
                                                @Html.HiddenFor(m => Model.Reserva_Casos[i].Acciones)
                                            </td>

                                            <td class="text-right">
                                                <a type="button" id="EliminarLinea" class="tr-close" data-toggle="tooltip" data-placement="top" data-original-title="Eliminar" onclick='productDeleteCaso(this);'>
                                                  
                                                    <i class="icofont-close"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                            <!-- End Invoice List Table -->
                        </div>

                        <!-- Cart Collaterals -->
                        <div class="cart-collaterals style--two pt-4 pt-xl-0">
                            <div class="cart_totals calculated_shipping">


                                <div class="proceed-to-checkout invoice-edit d-flex align-items-center justify-content-end mr-20 mt-4">
                                    <a href="@Url.Action("Index","Reservas")" class="btn preview">Regresar</a>
                                    <button type="submit" class="btn">Guardar</button>
                                </div>
                            </div>
                        </div>
                        <!-- End Cart Collaterals -->
                    </div>
                    <!-- End Invoice Details List Wrapper -->

                </div>
            }
        </div>
    </div>
</div>

@section Scripts {


    <script type="text/javascript">
        //jQuery(document).ready(function ($) {
        //    $(document).ready(function () {
        //        $('.mi-selector').select2();
        //    });
        //});
        $(document).ready(function () {
            $(document).ready(function () {
                $('.mi-selector').select2({
                    tags: true
                });
            });
            //Dropdownlist Selectedchange event
            $("#AgregarLinea").click(function () {
                var Observaciones_temp = "";
                var Observaciones_Add = "";
                var NumEvento = "";

                var Nombrecl = "";
                var DEntrega = "";
                var DiFiscal = "";
                var Tel = "";
                var Celular = "";
                let tiempoArmado = 0;
                var PersonaRecibe = "";
                $.ajax({
                type: 'POST',
                url: '@Url.Action("GetListadoArticulos", "Reservas")', // we are calling json method
                dataType: 'json',
                data: {
                    id: $("#evento").val()
                },
               // here we are get value of selected country and passing same value
                  //as inputto json method GetStates.
                success: function (states) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    $.each(states, function (i, state) {
                        var oRows = document.getElementById('invoice-edit-list-table').getElementsByTagName('tr');
                        var iRowCount = oRows.length;
                        var NumeroLinea = iRowCount - 1;
                        var newRowContent =
                            '<tr class="Articulos" data-repeater-item=""> ' +
                            '<td class="bold">' +
                            NumeroLinea
                            +
                            '<input id="Reserva_Articulos_' + NumeroLinea + '__Id" name="Reserva_Articulos[' + NumeroLinea + '].Id" type="hidden" value="' + NumeroLinea + '">' +
                            '</td>' +
                            '<td class="NumEvento">' +
                            state.NumEvento
                            +
                            '<input  id="Reserva_Articulos_' + NumeroLinea + '__NumEvento" name="Reserva_Articulos[' + NumeroLinea + '].NumEvento" type="hidden" value="' + state.NumEvento + '">' +
                            '</td>' +
                            '<td class="CodigoArticulo">' +
                            state.CodigoArticulo
                            +
                            '<input id="Reserva_Articulos_' + NumeroLinea + '__CodigoArticulo" name="Reserva_Articulos[' + NumeroLinea + '].CodigoArticulo" type="hidden" value="' + state.CodigoArticulo + '">' +
                            '</td>' +
                            '<td class="Descripcion">' +
                            state.Descripcion
                            +
                            '<input id="Reserva_Articulos_' + NumeroLinea + '__Descripcion" name="Reserva_Articulos[' + NumeroLinea + '].Descripcion" type="hidden" value="' + state.Descripcion + '">' +
                            '</td>' +
                            '<td class="Cantidad">' +
                            state.Cantidad
                            +
                            '<input id="Reserva_Articulos_' + NumeroLinea + '__Cantidad" name="Reserva_Articulos[' + NumeroLinea + '].Cantidad" type="hidden" value="' + state.Cantidad + '">' +
                            '</td>' +
                            '<td class="TiempoArmado" style="display:none;">' +
                            state.TiempoArmado
                            +
                            '<input id="Reserva_Articulos_' + NumeroLinea + '__TiempoArmado" name="Reserva_Articulos[' + NumeroLinea + '].TiempoArmado" type="hidden" value="' + state.TiempoArmado + '">' +
                            '</td>' +
                            '<td class="Remisionado" style="display:none;">' +
                            state.Remisionado
                            +
                            '<input id="Reserva_Articulos_' + NumeroLinea + '__Remisionado" name="Reserva_Articulos[' + NumeroLinea + '].Remisionado" type="hidden" value="' + state.Remisionado + '">' +
                            '</td>' +
                            '<td class="EstadoArticulo" style="display:none;">' +
                            state.EstadoArticulo
                            +
                            '<input id="Reserva_Articulos_' + NumeroLinea + '__EstadoArticulo" name="Reserva_Articulos[' + NumeroLinea + '].EstadoArticulo" type="hidden" value="' + state.EstadoArticulo + '">' +
                            '</td>' +
                            '<td >' +
                            '<a type="button" id="EliminarLinea" class="tr-close" data-toggle="tooltip" data-placement="top" data-original-title="Eliminar" onclick=\'productDelete(this);\'>' +
                            '<i class="icofont-close"></i></a>' +
                            '</td>' +
                            '</tr>';
                        $("#invoice-edit-list-table").find('tbody').append(newRowContent);

                        tiempoArmado = tiempoArmado + parseFloat(state.TiempoArmado);
                        NumEvento = state.NumEvento;
                        Observaciones_Add = state.Observaciones;
                        Nombrecl = state.NombreCliente;
                        DEntrega = state.DireccionEntrega;
                        DiFiscal = state.DireccionFiscal;
                        Tel = state.Telefono;
                        Celular = state.Telefono;
                        PersonaRecibe = state.PersonaRecibe;
                        //$("#SerieSAP").append('<option value="' + state.numero + '">' +
                        //    state.serie + '</option>');
                    // here we are adding option for States
                    });
                    Observaciones_temp = $("#ComentariosVenta").val();

                    var nombre = document.getElementById("NombreCliente").value;

                    if (nombre == "") {
                        document.getElementById("NombreCliente").value = Nombrecl;
                        document.getElementById("DireccionEntrega").value = DEntrega;
                        document.getElementById("DireccionFiscal").value = DiFiscal;
                        document.getElementById("Telefono").value = Tel;
                        document.getElementById("Celular").value = Celular;
                        if (Tel == null || Tel == "") {
                            document.getElementById("Telefono").value = Celular;
                        }
                        if (Celular == null || Celular == "") {
                            document.getElementById("Celular").value = Tel;
                        }
                    } else {

                        Swal.fire({
                            title: "Desea actualizar la información del cliente?",
                            text: "Si acepta, los datos generales del cliente serán modificados por el cliente " + Nombrecl + "!",
                            type: "warning",
                            showCancelButton: !0,
                            confirmButtonColor: "#3085d6",
                            cancelButtonColor: "#d33",
                            confirmButtonText: "Si, actualizar información!",
                            confirmButtonClass: "btn long",
                            cancelButtonClass: "btn long bg-danger ml-1",
                            buttonsStyling: !1,
                        }).then(function (t) {
                            if (t.value) {
                                document.getElementById("NombreCliente").value = Nombrecl;
                                document.getElementById("DireccionEntrega").value = DEntrega;
                                document.getElementById("DireccionFiscal").value = DiFiscal;
                                document.getElementById("Telefono").value = Tel;
                                document.getElementById("Celular").value = Celular;
                                if (Tel == null || Tel == "") {
                                    document.getElementById("Telefono").value = Celular;
                                }
                                if (Celular == null || Celular == "") {
                                    document.getElementById("Celular").value = Tel;
                                }

                                Observaciones_temp = $("#ComentariosVenta").val();
                                if ($("#ComentariosVenta").val() === "") {
                                    Observaciones_temp = "Caso " + NumCaso + ": " + Observaciones;
                                } else {
                                    Observaciones_temp = $("#ComentariosVenta").val() + "\n\nCaso " + NumCaso + ": " + Observaciones;
                                }
                                document.getElementById("ComentariosVenta").value = Observaciones_temp;
                            } else {
                                Observaciones_temp = $("#ComentariosVenta").val();
                                if ($("#ComentariosVenta").val() === "") {
                                    Observaciones_temp = "Caso " + NumCaso + ": " + Observaciones;
                                } else {
                                    Observaciones_temp = $("#ComentariosVenta").val() + "\n\nCaso " + NumCaso + ": " + Observaciones;
                                }
                                document.getElementById("ComentariosVenta").value = Observaciones_temp;
                            }


                        });
                    }
                    document.getElementById("TiempoArmado").value = tiempoArmado;

                    if ($("#ComentariosVenta").val() === "") {
                        Observaciones_temp = "Evento " + NumEvento + ": " + Observaciones_Add;
                    } else {
                        Observaciones_temp = $("#ComentariosVenta").val() + "\n\nEvento " + NumEvento + ": " + Observaciones_Add;
                    }

                    document.getElementById("ComentariosVenta").value = Observaciones_temp;
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            })
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            //Dropdownlist Selectedchange event
            $("#AgregarLinea2").click(function () {
                var Observaciones = "";
                var Acciones = "";
                var NumCaso = "";

                var Nombrecl = "";
                var DEntrega = "";
                var DiFiscal = "";
                var Tel = "";
                var Celular = "";


                $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCaso", "Reservas")', // we are calling json method
                dataType: 'json',
                data: {
                    id: $("#caso").val()
                },
               // here we are get value of selected country and passing same value
                  //as inputto json method GetStates.
                success: function (states) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    $.each(states, function (i, state) {
                        //Observaciones += Observaciones + "\n" + state.Observaciones;
                        //Acciones += Acciones + "\n" + state.Acciones;
                        //NumCaso = state.NumCaso;
                        Observaciones =  state.Observaciones;
                        Acciones += state.Acciones;
                        NumCaso = state.NumCaso;
                        if (state.Acciones != '') {
                            var oRows = document.getElementById('invoice-edit-list-table2').getElementsByTagName('tr');
                            var iRowCount = oRows.length;
                            var NumeroLinea = iRowCount - 1;

                            var newRowContent =
                                '<tr class="Casos" data-repeater-item=""> ' +
                                '<td class="bold">' +
                                NumeroLinea
                                +
                                '<input id="Reserva_Casos_' + NumeroLinea + '__Id" name="Reserva_Casos[' + NumeroLinea + '].Id" type="hidden" value="' + NumeroLinea + '">' +
                                '</td>' +
                                '<td class="Numcaso">' +
                                '<div class="form-group mb-6">' +
                                NumCaso
                                +
                                '<input id="Reserva_Casos_' + NumeroLinea + '__NumCaso" name="Reserva_Casos[' + NumeroLinea + '].NumCaso" type="hidden" value="' + NumCaso + '">' +
                                '</div>' +
                                '</td>' +
                                //'<td>' +
                                //'<textarea id="Reserva_Casos_' + NumeroLinea + '__Observaciones" name="Reserva_Casos[' + NumeroLinea + '].Observaciones" class="theme-input-style style--three" placeholder="Type Here" disabled>' + Observaciones + '</textarea>' +
                                //'</td>' +
                                '<td class="Acciones">' +
                                '<textarea  id="Reserva_Casos_' + NumeroLinea + '__Acciones" name="Reserva_Casos[' + NumeroLinea + '].Acciones" class="theme-input-style style--three" value="' + state.Acciones + '" placeholder="Type Here" disabled>' + state.Acciones + '</textarea >' +
                                '<input id="Reserva_Casos_' + NumeroLinea + '__Acciones" name="Reserva_Casos[' + NumeroLinea + '].Acciones" type="hidden" value="' + state.Acciones + '">'+
                                '</td>' +
                                '<td>' +
                                '<a type="button" id="EliminarLinea" class="tr-close" data-toggle="tooltip" data-placement="top" data-original-title="Eliminar" onclick=\'productDeleteCaso(this);\'>' +
                                '<i class="icofont-close"></i></a>' +
                                '</td>' +
                                '</tr>';
                            $("#invoice-edit-list-table2").find('tbody').append(newRowContent);

                            Nombrecl = state.Cliente;
                            DEntrega = state.Direccion;
                            DiFiscal = state.Direccion;
                            Tel = state.Tel;
                            Celular = state.Cel;
                        }
                    });


                    var nombre = document.getElementById("NombreCliente").value;

                    console.log(nombre);

                    if (nombre == "") {
                        document.getElementById("NombreCliente").value = Nombrecl;
                        document.getElementById("DireccionEntrega").value = DEntrega;
                        document.getElementById("DireccionFiscal").value = DiFiscal;
                        document.getElementById("Telefono").value = Tel;
                        document.getElementById("Celular").value = Celular;
                        if (Tel == null || Tel == "") {
                            document.getElementById("Telefono").value = Celular;
                        }
                        if (Celular == null || Celular == "") {
                            document.getElementById("Celular").value = Tel;
                        }

                        Observaciones_temp = $("#ComentariosVenta").val();
                        if ($("#ComentariosVenta").val() === "") {
                            Observaciones_temp = "Caso " + NumCaso + ": " + Observaciones;
                        } else {
                            Observaciones_temp = $("#ComentariosVenta").val() + "\n\nCaso " + NumCaso + ": " + Observaciones;
                        }
                        document.getElementById("ComentariosVenta").value = Observaciones_temp;
                    } else {

                        Swal.fire({
                            title: "Desea actualizar la información del cliente?",
                            text: "Si acepta, los datos generales del cliente serán modificados por el cliente " + Nombrecl + "!",
                            type: "warning",
                            showCancelButton: !0,
                            confirmButtonColor: "#3085d6",
                            cancelButtonColor: "#d33",
                            confirmButtonText: "Si, actualizar informacion!",
                            confirmButtonClass: "btn long",
                            cancelButtonClass: "btn long bg-danger ml-1",
                            buttonsStyling: !1,
                        }).then(function (t) {
                            if (t.value) {
                                document.getElementById("NombreCliente").value = Nombrecl;
                                document.getElementById("DireccionEntrega").value = DEntrega;
                                document.getElementById("DireccionFiscal").value = DiFiscal;
                                document.getElementById("Telefono").value = Tel;
                                document.getElementById("Celular").value = Celular;
                                if (Tel == null || Tel == "") {
                                    document.getElementById("Telefono").value = Celular;
                                }
                                if (Celular == null || Celular == "") {
                                    document.getElementById("Celular").value = Tel;
                                }

                                Observaciones_temp = $("#ComentariosVenta").val();
                                if ($("#ComentariosVenta").val() === "") {
                                    Observaciones_temp = "Caso " + NumCaso + ": " + Observaciones;
                                } else {
                                    Observaciones_temp = $("#ComentariosVenta").val() + "\n\nCaso " + NumCaso + ": " + Observaciones;
                                }
                                document.getElementById("ComentariosVenta").value = Observaciones_temp;
                            } else {
                                Observaciones_temp = $("#ComentariosVenta").val();
                                if ($("#ComentariosVenta").val() === "") {
                                    Observaciones_temp = "Caso " + NumCaso + ": " + Observaciones;
                                } else {
                                    Observaciones_temp = $("#ComentariosVenta").val() + "\n\nCaso " + NumCaso + ": " + Observaciones;
                                }
                                document.getElementById("ComentariosVenta").value = Observaciones_temp;
                            }
                        });
                    }


                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            })
        });
    </script>


    <script>

         function productDeleteCaso(ctl) {

            $(ctl).closest("tr").remove();

             recorrerCaso();
        }
        function recorrerCaso() {

            var value = "";
            $(".Casos .Numcaso").each(function () {
                value += $(this).text() + ",";

            });
            value += "|";
            $(".Casos .Acciones").each(function () {
                value +=  $(this).text() + ",";

            });

            var Observaciones = "";
            var Acciones = "";
            var NumCaso = "";

            $.ajax({
            type: 'POST',
            url: '@Url.Action("OrdenarCasos", "Reservas")', // we are calling json method
            dataType: 'json',
            data: {
                id: value
            },
            // here we are get value of selected country and passing same value
                //as inputto json method GetStates.
            success: function (states) {
                // states contains the JSON formatted list
                // of states passed from the controller

                $("#TablaCasos").empty();

                $.each(states, function (i, state) {
                    var oRows = document.getElementById('invoice-edit-list-table2').getElementsByTagName('tr');
                    var iRowCount = oRows.length;
                    var NumeroLinea = iRowCount - 1;
                    NumCaso = state.Caso;
                    if (NumCaso !="") {
                        var newRowContent =
                            '<tr data-repeater-item=""> ' +
                            '<td class="bold">' +
                            NumeroLinea
                            +
                            '<input id="Reserva_Casos_' + NumeroLinea + '__Id" name="Reserva_Casos[' + NumeroLinea + '].Id" type="hidden" value="' + NumeroLinea + '">' +
                            '</td>' +
                            '<td class="Numcaso">' +
                            '<div class="form-group mb-6">' +
                            NumCaso
                            +
                            '<input id="Reserva_Casos_' + NumeroLinea + '__NumCaso" name="Reserva_Casos[' + NumeroLinea + '].NumCaso" type="hidden" value="' + NumCaso + '">' +
                            '</div>' +
                            '</td>' +
                            //'<td>' +
                            //'<textarea id="Reserva_Casos_' + NumeroLinea + '__Observaciones" name="Reserva_Casos[' + NumeroLinea + '].Observaciones" class="theme-input-style style--three" placeholder="Type Here" disabled>' + Observaciones + '</textarea>' +
                            //'</td>' +
                            '<td class="Acciones">' +
                            '<textarea  id="Reserva_Casos_' + NumeroLinea + '__Acciones" name="Reserva_Casos[' + NumeroLinea + '].Acciones" class="theme-input-style style--three" value="' + state.Acciones + '" placeholder="Type Here" disabled>' + state.Acciones + '</textarea >' +
                            '<input id="Reserva_Casos_' + NumeroLinea + '__Acciones" name="Reserva_Casos[' + NumeroLinea + '].Acciones" type="hidden" value="' + state.Acciones + '">' +
                            '</td>' +
                            '<td>' +
                            '<a type="button" id="EliminarLinea" class="tr-close" data-toggle="tooltip" data-placement="top" data-original-title="Eliminar" onclick=\'productDeleteCaso(this);\'>' +
                            '<i class="icofont-close"></i></a>' +
                            '</td>' +
                            '</tr>';
                        $("#invoice-edit-list-table2").find('tbody').append(newRowContent);
                    }

                });

                //document.getElementById("ComentariosVenta").value = states.Comentarios;
            },
            error: function (ex) {
                alert('Failed to retrieve states.' + ex);
            }
        });
        }


    </script>

    <script type="text/javascript">
        function productDelete(ctl) {

            $(ctl).closest("tr").remove();

            recorrer();
        }
        function recorrer() {

            let tiempoArmado = 0;
            var value = "";
            $(".Articulos .NumEvento").each(function () {
                value +="'"+ $(this).text()+"'" + ",";

            });
            value += "|";
            $(".Articulos .CodigoArticulo").each(function () {
                value +=  $(this).text() + ",";

            });

            value += "|";
            $(".Articulos .Descripcion").each(function () {
                value += $(this).text() + ",";

            });

            value += "|";
            $(".Articulos .Cantidad").each(function () {
                value +=  $(this).text() + ",";

            });
            value += "|";
            $(".Articulos .TiempoArmado").each(function () {
                value +=  $(this).text() + ",";

            });

            value += "|";
            $(".Articulos .Remisionado").each(function () {
                value += $(this).text() + ",";

            });

            value += "|";
            $(".Articulos .EstadoArticulo").each(function () {
                value +=  $(this).text() + ",";

            });

            $.ajax({
            type: 'POST',
            url: '@Url.Action("ObtenerComentarios", "Reservas")', // we are calling json method
            dataType: 'json',
            data: {
                id: value
            },
            // here we are get value of selected country and passing same value
                //as inputto json method GetStates.
            success: function (states) {
                // states contains the JSON formatted list
                // of states passed from the controller

                $("#tbodyArticulos").empty();

                $.each(states.articulosdet, function (i, state) {
                    var oRows = document.getElementById('invoice-edit-list-table').getElementsByTagName('tr');
                    var iRowCount = oRows.length;
                    var NumeroLinea = iRowCount - 1;
                    var newRowContent =
                        '<tr class="Articulos" data-repeater-item=""> ' +
                        '<td class="bold">' +
                        NumeroLinea
                        +
                        '<input id="Reserva_Articulos_' + NumeroLinea + '__Id" name="Reserva_Articulos[' + NumeroLinea + '].Id" type="hidden" value="' + NumeroLinea + '">' +
                        '</td>' +
                        '<td class="NumEvento">' +
                        state.NumEvento
                        +
                        '<input  id="Reserva_Articulos_' + NumeroLinea + '__NumEvento" name="Reserva_Articulos[' + NumeroLinea + '].NumEvento" type="hidden" value="' + state.NumEvento + '">' +
                        '</td>' +
                        '<td class="CodigoArticulo">' +
                        state.CodigoArticulo
                        +
                        '<input id="Reserva_Articulos_' + NumeroLinea + '__CodigoArticulo" name="Reserva_Articulos[' + NumeroLinea + '].CodigoArticulo" type="hidden" value="' + state.CodigoArticulo + '">' +
                        '</td>' +
                        '<td class="Descripcion">' +
                        state.Descripcion
                        +
                        '<input id="Reserva_Articulos_' + NumeroLinea + '__Descripcion" name="Reserva_Articulos[' + NumeroLinea + '].Descripcion" type="hidden" value="' + state.Descripcion + '">' +
                        '</td>' +
                        '<td class="Cantidad">' +
                        state.Cantidad
                        +
                        '<input id="Reserva_Articulos_' + NumeroLinea + '__Cantidad" name="Reserva_Articulos[' + NumeroLinea + '].Cantidad" type="hidden" value="' + state.Cantidad + '">' +
                        '</td>' +
                        '<td class="TiempoArmado" style="display:none;">' +
                        state.TiempoArmado
                        +
                        '<input id="Reserva_Articulos_' + NumeroLinea + '__TiempoArmado" name="Reserva_Articulos[' + NumeroLinea + '].TiempoArmado" type="hidden" value="' + state.TiempoArmado + '">' +
                        '</td>' +
                        '<td class="Remisionado" style="display:none;">' +
                        state.Remisionado
                        +
                        '<input id="Reserva_Articulos_' + NumeroLinea + '__Remisionado" name="Reserva_Articulos[' + NumeroLinea + '].Remisionado" type="hidden" value="' + state.Remisionado + '">' +
                        '</td>' +
                        '<td class="EstadoArticulo" style="display:none;">' +
                        state.EstadoArticulo
                        +
                        '<input id="Reserva_Articulos_' + NumeroLinea + '__EstadoArticulo" name="Reserva_Articulos[' + NumeroLinea + '].EstadoArticulo" type="hidden" value="' + state.EstadoArticulo + '">' +
                        '</td>' +
                        '<td >' +
                        '<a type="button" id="EliminarLinea" class="tr-close" data-toggle="tooltip" data-placement="top" data-original-title="Eliminar" onclick=\'productDelete(this);\'>' +
                        '<i class="icofont-close"></i></a>' +
                        '</td>' +
                        '</tr>';
                    $("#invoice-edit-list-table").find('tbody').append(newRowContent);

                    tiempoArmado = tiempoArmado + parseFloat(state.TiempoArmado);
                });

                document.getElementById("TiempoArmado").value = tiempoArmado;

                document.getElementById("ComentariosVenta").value = states.Comentarios;
            },
            error: function (ex) {
                alert('Failed to retrieve states.' + ex);
            }
        });
        }
    </script>
    <script type="text/javascript">
        function My_onLoad(mensaje) {
            Swal.fire({ title: "Error!", text: mensaje, type: "error", confirmButtonClass: "btn long", buttonsStyling: !1 });
        }
    </script>

}