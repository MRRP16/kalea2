@model IEnumerable<kalea2.Models.Reserva>



    <div class="panel" id="spy2" style="background-color:#ffffff">      
        <div class="panel-body pn">
            <div class="table-responsive">
                <table class="table footable" data-filter="#fooFilter">
                    <thead>
                        <tr>
                            <th># Entrega<img src="~/Content/assets/img/svg/table-down-arrow.svg" alt="" class="svg"></th>
                            <th>Fecha<img src="~/Content/assets/img/svg/table-down-arrow.svg" alt="" class="svg"></th>
                            <th>Nombre<img src="~/Content/assets/img/svg/table-down-arrow.svg" alt="" class="svg"></th>
                            <th>Telefono<img src="~/Content/assets/img/svg/table-down-arrow.svg" alt="" class="svg"></th>
                            <th>Celular<img src="~/Content/assets/img/svg/table-down-arrow.svg" alt="" class="svg"></th>
                            <th>Vehiculo<img src="~/Content/assets/img/svg/table-down-arrow.svg" alt="" class="svg"></th>
                            <th>Estado<img src="~/Content/assets/img/svg/table-down-arrow.svg" alt="" class="svg"></th>
                            <th>Tipo<img src="~/Content/assets/img/svg/table-down-arrow.svg" alt="" class="svg"></th>
                            <th>Accion</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                    @Html.HiddenFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FechaEntrega2)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NombreCliente)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.Telefono)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Celular)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Vehiculo)
                                </td>
                                <td>
                                    @switch (item.Estado)
                                    {
                                        case "A":
                                            <a class="status-btn completed">
                                                Activo
                                            </a>
                                            @Html.HiddenFor(modelItem => item.Estado)
                                            break;
                                        case "AN":
                                            <a class="status-btn un_paid">
                                                Anulado
                                            </a>
                                            @Html.HiddenFor(modelItem => item.Estado)
                                            break;
                                    }
                                </td>
                                <td>
                                    @switch (item.ColorTipoEvento)
                                    {
                                        case "#00b050":
                                            <a>
                                                Definitivo
                                            </a>
                                            break;
                                        case "#FF0000":
                                            <a>
                                                Definitivo
                                            </a>
                                            break;
                                        case "#ffff00":
                                            <a>
                                                Temporal
                                            </a>
                                            break;
                                        case "#FF5733":
                                            <a>
                                                Traslado
                                            </a>
                                            break;
                                    }
                                </td>

                                <td>

                                    @switch (item.Estado)
                                    {
                                        case "A":
                                            <a class="details-btn" href="@Url.Action("Edit", new {id = item.Id})">
                                                Editar
                                                <img src="~/Content/assets/img/svg/plus_white.svg" alt="" class="svg">
                                            </a>
                                            <button class="details-btn" onclick="Eliminar('@item.Id')">
                                                Anular
                                                <img src="~/Content/assets/img/svg/plus_white.svg" alt="" class="svg">
                                            </button>
                                            @Html.HiddenFor(modelItem => item.Estado)
                                            break;

                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

 <script>
        $(function () {

            var PlaceHolderElement = $('#PlaceHolderHere')
            $('button[data-toggle="ajax-modal"]').click(function (event) {

                var url = $(this).data('url');
                var decodeurl = decodeURIComponent(url);
                $.get(decodeurl).done(function (data) {
                    PlaceHolderElement.html(data);
                    PlaceHolderElement.find('.modal').modal('show');
                })
            })


            PlaceHolderElement.on('click', '[data-save="modal"]', function (event) {
                event.preventDefault();
                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');

                var sendData = form.serialize();

                console.log(actionUrl);
                console.log(sendData);

                $.post(actionUrl, sendData).done(function (data) {
                    PlaceHolderElement.find('.modal').modal('hide');
                    location.reload();
                }).fail(function () {

                    alter("error");
                })
            })
        })
    </script>

<script>

        function Eliminar(id) {
        Swal.fire({
            title: "Esta seguro de anular la entrega seleccionada?",
            text: "Si anula esta entrega, no podra recuperarla!",
            type: "warning",
            showCancelButton: !0,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Si, anular la entrega!",
            confirmButtonClass: "btn long",
            cancelButtonClass: "btn long bg-danger ml-1",
            buttonsStyling: !1,
        }).then(function (t) {

          
            t.value

            if (t.value) {

                $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "CasosEntregas")',

                dataType: 'json',
                data: {
                    id: id
                },
                success: function (states) {
                    /* alert("Orden");*/

                    console.log(states);

                    if (states.includes("Error")) {
                        Swal.fire({ title: "Error!", text: "Ocurrio un error al anular la entrega. " + ex, type: "error", confirmButtonClass: "btn long", buttonsStyling: !1 });
                    } else {
                        Swal.fire({ title: "Excelente!", text: "Entrega anulada exitosamente!", type: "success", confirmButtonClass: "btn long", buttonsStyling: !1 });
                        /*location.reload();*/
                    }
                },
                    error: function (ex) {
                        console.log(states);
                    Swal.fire({ title: "Error!", text: "Ocurrio un error al ordenes las entregas. Error:" + ex, type: "error", confirmButtonClass: "btn long", buttonsStyling: !1 });
                }
            })

            } else {
                t.dismiss === Swal.DismissReason.cancel && Swal.fire({ title: "Cancelado", text: "La entrega no se a anulado! :)", type: "error", confirmButtonClass: "btn btn-success" });
            }

        });
    };
    </script>

<script type="text/javascript">
    jQuery(document).ready(function () {

        //"use strict";

        //// Init Theme Core
        //Core.init();

        //// Init Demo JS
        //Demo.init();


        // Init FooTable
        $('.footable').footable();


    });
</script>

