@model kalea2.Models.RespuestaReservaPorVehiculo

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>

    <!-- ======= BEGIN PAGE LEVEL PLUGINS STYLES ======= -->
    <link rel="stylesheet" href="~/Content/assets/plugins/datepicker/datepicker.min.css">
    <link rel="stylesheet" href="~/Content/assets/plugins/timepicker/jquery.timepicker.min.css">
    <link rel="stylesheet" href="~/Content/assets/plugins/daterangepicker/daterangepicker.css">
    <!-- ======= END BEGIN PAGE LEVEL PLUGINS STYLES ======= -->
</head>

<!-- Main Content -->
<div class="main-content d-flex flex-column flex-md-row">
    <div class="container-fluid">

        <div class="progress" id="barraProgreso" style="display: none;">
            <div class="progress-bar progress-bar-striped progress-bar-animated" id="barraProgresoContenido" role="progressbar" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100" style="width: 10%"></div>
        </div>

        <div class="row">
            <div class="col-12">
                <div class="project-header d-flex align-items-md-center media flex-column flex-md-row bg-white mb-30">
                    <div class="project-header-left media-body d-flex align-items-center w-100 mr-md-4">
                        @*Title*@
                        <div class="title">
                            <h4 class="font-20">Eventos programados para @Model.Vehiculo.Descripcion</h4>
                        </div>
                        @*End Title*@
                    </div>
                    <form action="#" class="search-form" autocomplete="off">
                        <div class="project-header-right d-flex align-items-center justify-content-md-end flex-wrap mt-3 mt-md-0">
                            <div class="form-group mb-4 mb-lg-0">
                                <!-- Date Picker -->
                                <div class="dashboard-date style--four">
                                    <span class="input-group-addon">
                                        <img src="~/Content/assets/img/svg/calender.svg" alt="" class="svg">
                                    </span>

                                    <!-- <input type="text" id="default-date" placeholder="Select Date"/> -->
                                    <input type="text" name="daterange" id="FiltroFecha" value="@DateTime.Now.ToString("MM/dd/yyyy") - @DateTime.Now.AddDays(7).ToString("MM/dd/yyyy")" />
                                    <div class="create-new-board mb-2 mb-sm-0">
                                        <button type="submit" h>
                                            <img src="~/Content/assets/img/svg/search-icon.svg" alt="" class="svg">
                                        </button>
                                    </div>
                                </div>

                                <!-- End Date Picker -->
                            </div>
                            <!-- Member -->
                            <!-- End Create New Board -->
                        </div>
                    </form>
                </div>
            </div>
        </div>


        <div class="board-wrapper">
            <!-- Board -->
            @*Horario*@
            <div class="board" style="min-width: 65px; max-width: 65px;">
                <div class="board-header d-flex justify-content-between align-items-center mb-10">
                    <h4 class="c2">Hora</h4>
                    <div class="dropdown-button">
                        <a href="#" class="d-flex align-items-center" data-toggle="dropdown">
                            <div class="menu-icon justify-content-center style--two mr-0">
                                <span></span>
                                <span></span>
                                <span></span>
                            </div>
                        </a>
                    </div>
                </div>
                <div class="board-cards">
                    <!-- Timeline Wrap -->
                    <div id="timeline-wrap">
                        <ul class="timeline">
                            @*<li class="event horario">
                                    <span>7:00 AM</span>
                                </li>*@
                            @foreach (var item in Model.Horas)
                            {
                            <li class="event horario">
                                <span style="font-weight: bold;">@item</span>
                            </li>
                            }
                            @*<li class="event horario">
                                    <span>8:00 AM</span>
                                </li>
                                <li class="event horario">
                                    <span>9:00 AM</span>
                                </li>
                                <li class="event horario">
                                    <span>10:00 AM</span>
                                </li>
                                <li class="event horario">
                                    <span>11:00 AM</span>
                                </li>
                                <li class="event horario">
                                    <span>12:00 PM</span>
                                </li>
                                <li class="event horario">
                                    <span>1:00 PM</span>
                                </li>
                                <li class="event horario">
                                    <span>2:00 PM</span>
                                </li>
                                <li class="event horario">
                                    <span>3:00 PM</span>
                                </li>
                                <li class="event horario">
                                    <span>4:00 PM</span>
                                </li>
                                <li class="event horario">
                                    <span>5:00 PM</span>
                                </li>
                                <li class="event horario">
                                    <span>6:00 PM</span>
                                </li>
                                <li class="event horario">
                                    <span>7:00 PM</span>
                                </li>*@
                        </ul>
                    </div>
                </div>
            </div>
            @*FIN Horario*@

            @for (int i = 0; i < Model.Listado.Count; i++)
            {
                var contiene = false;
                <div class="board" id="@Html.DisplayFor(modelItem => Model.Listado[i].Fecha)" otro="@Html.DisplayFor(modelItem => Model.Listado[i].Id)">
                    <!-- Board Header -->
                    <div class="board-header d-flex justify-content-between align-items-center mb-10">

                        <h4 class="c2">@Html.DisplayFor(modelItem => Model.Listado[i].Fecha)</h4>

                        <!-- Dropdown Button -->
                        <div class="dropdown-button">
                            <a href="#" class="d-flex align-items-center" data-toggle="dropdown">
                                <div class="menu-icon justify-content-center style--two mr-0">
                                    <span></span>
                                    <span></span>
                                    <span></span>
                                </div>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right">
                                <a href="@Url.Action("Create","Reservas", new {id = Model.Listado[i].Id, fecha = Model.Listado[i].Fecha})">Reserva definitva</a>
                                <a href="@Url.Action("CreateReserva","Reservas", new {id = Model.Listado[i].Id, fecha = Model.Listado[i].Fecha})">Reserva temporal</a>
                            </div>
                        </div>
                        <!-- End Dropdown Button -->
                    </div>
                    <!-- End Board Header -->
                    <!-- Boards Cards -->
                    <div class="board-cards">
                        @*@{ IEnumerable<Kalea.Models.Reserva> someVariable = Model.Reservaciones.Where(ve => ve.Vehiculo.Equals(Model.Vehiculos[i].Codigo.ToString())); }*@
                        @* Evento Inicial *@

                        @{ IEnumerable<kalea2.Models.Reserva> someVariable2 = Model.Listado[i].Listado.Where(x => x.NumeroEntregaDia == "I").OrderBy(ve => ve.NumeroEntregaDia); }

                        @if (someVariable2.Count() > 0)
                        {
                            if (someVariable2.First().TamanioTarjetaTranspareante > 0)
                            {

                                <div class="board-card label-2 tarjetaReserva ov-hidden" style="--AltoTarjeta:  @Html.DisplayFor(modelItem => someVariable2.First().TamanioTarjetaTranspareante)px; background-color: transparent; cursor: auto; ">
                                </div>
                            }
                        }

                        @foreach (var item in someVariable2)
                        {
                            contiene = true;
                            <div class="board-card label-2 tarjetaReserva ov-hidden"
                                 style="--colorTarjeta: @Html.DisplayFor(modelItem => item.ColorTipoEvento); --AltoTarjeta:@Html.DisplayFor(modelItem => item.TamanioTarjeta)px;"
                                 id="card-@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Vehiculo)">

                                <div class="row">
                                    <div class="col-sm d-inline-flex justify-content-between">
                                        <p class="black mb-2">Evento inicial del dia</p>
                                        @if (item.TamanioTarjeta < 180)
                                        {
                                            <p id="@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Id)-expandir"
                                               onclick="expandir('@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Id)-expandir', 'card-@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Vehiculo)', @Html.DisplayFor(modelItem => item.TamanioTarjeta))"
                                               estadoExpandir="true">
                                                <i class="arrow_carrot-down"></i>
                                            </p>
                                        }
                                    </div>
                                </div>
                                <p class="black mb-1"></p>
                                <p class="black mb-1"></p>
                                <p class="black mb-1"></p>
                                <p class="black mb-1"></p>

                                <div class="@(int.Parse(Html.DisplayFor(modelItem => item.TamanioTarjeta).ToString()) > 210 ? "d-flex flex-column justify-content-between" : "d-flex flex-row")">
                                    <div class="d-flex flex-row">
                                        <div class="m-1 d-flex justify-content-between align-items-center">
                                            <div class="left d-flex align-items-center">
                                                <img src="~/Content/assets/img/svg/watch.svg" alt="" class="svg mr-1">
                                                <a href="#" class="text_color font-12" data-toggle="tooltip" data-placement="top" title="Tiempo en Ruta">TR @Html.DisplayFor(modelItem => item.TiempoRuta) -</a>
                                            </div>
                                        </div>
                                        <div class="d-flex justify-content-between align-items-center m-1">
                                            <div class="left d-flex align-items-center">
                                                <img src="~/Content/assets/img/svg/watch.svg" alt="" class="svg mr-1">
                                                <a href="#" class="text_color font-12" data-toggle="tooltip" data-placement="top" title="Hora de llegada">HL @Html.DisplayFor(modelItem => item.FechaArmado)</a>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="m-1 d-flex justify-content-between align-items-center" style="@(int.Parse(Html.DisplayFor(modelItem => item.TamanioTarjeta).ToString()) > 210 ? "position: absolute;" : "")  bottom: 0;">
                                        <div class="left d-flex align-items-center">
                                            <img src="~/Content/assets/img/svg/watch.svg" alt="" class="svg mr-1">
                                            <a href="#" class="text_color font-12" data-toggle="tooltip" data-placement="top" title="Hora fin">HF @Html.DisplayFor(modelItem => item.FechaFin) </a>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        }

                        @{ IEnumerable<kalea2.Models.Reserva> someVariable = Model.Listado[i].Listado.Where(x => x.NumeroEntregaDia != "I").Where(x => x.NumeroEntregaDia != "F").OrderBy(ve => ve.NumeroEntregaDia); }

                        @* Evento intermedios *@
                        @foreach (var item in someVariable)
                        {
                            contiene = true;
                            <div class="board-card label-2 tarjetaReserva ov-hidden"
                                 style="--colorTarjeta: @Html.DisplayFor(modelItem => item.ColorTipoEvento); --AltoTarjeta:@Html.DisplayFor(modelItem => item.TamanioTarjeta)px;"
                                 id="card-@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Vehiculo)">

                                <div class="row">
                                    <div class="col-sm d-inline-flex justify-content-between">
                                        <p class="black mb-2">Entrega #@Html.DisplayFor(modelItem => item.Id)</p>
                                        @if (item.TamanioTarjeta < 180)
                                        {
                                            <p id="@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Id)-expandir"
                                               onclick="expandir('@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Id)-expandir', 'card-@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Vehiculo)', @Html.DisplayFor(modelItem => item.TamanioTarjeta))"
                                               estadoExpandir="true">
                                                <i class="arrow_carrot-down"></i>
                                            </p>
                                        }
                                    </div>
                                </div>
                                <p class="black mb-1">Evento/Caso: @Html.DisplayFor(modelItem => item.ListadoEventosCasos)</p>
                                <p class="black mb-1">GPS: @Html.DisplayFor(modelItem => item.Geolocalizacion)</p>
                                <p class="black mb-1">Direccion: @Html.DisplayFor(modelItem => item.DireccionEntrega)</p>
                                <p class="black mb-1">Armado: @Html.DisplayFor(modelItem => item.TiempoArmado)</p>
                                @if (!item.FechaRestriccionInicio.Contains("00:00"))
                                {
                                    <p class="black mb-1">Restriccion: @Html.DisplayFor(modelItem => item.FechaRestriccionInicio) - @Html.DisplayFor(modelItem => item.FechaRestriccionFin) </p>
                                }
                                else
                                {
                                    <p class="black mb-1">Restriccion: 08:00 - 16:00 </p>
                                }
                                <div class="@(int.Parse(Html.DisplayFor(modelItem => item.TamanioTarjeta).ToString()) > 210 ? "d-flex flex-column justify-content-between" : "d-flex flex-row")">
                                    <div class="d-flex flex-row">
                                        <div class="m-1 d-flex justify-content-between align-items-center">
                                            <div class="left d-flex align-items-center">
                                                <img src="~/Content/assets/img/svg/watch.svg" alt="" class="svg mr-1">
                                                <a href="#" class="text_color font-12" data-toggle="tooltip" data-placement="top" title="Tiempo en Ruta">TR @Html.DisplayFor(modelItem => item.TiempoRuta) -</a>
                                            </div>
                                        </div>
                                        <div class="d-flex justify-content-between align-items-center m-1">
                                            <div class="left d-flex align-items-center">
                                                <img src="~/Content/assets/img/svg/watch.svg" alt="" class="svg mr-1">
                                                <a href="#" class="text_color font-12" data-toggle="tooltip" data-placement="top" title="Hora de llegada">HL @Html.DisplayFor(modelItem => item.FechaArmado)</a>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="m-1 d-flex justify-content-between align-items-center" style="@(int.Parse(Html.DisplayFor(modelItem => item.TamanioTarjeta).ToString()) > 210 ? "position: absolute;" : "")  bottom: 0;">
                                        <div class="left d-flex align-items-center">
                                            <img src="~/Content/assets/img/svg/watch.svg" alt="" class="svg mr-1">
                                            <a href="#" class="text_color font-12" data-toggle="tooltip" data-placement="top" title="Hora fin">HF @Html.DisplayFor(modelItem => item.FechaFin) </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        @{ IEnumerable<kalea2.Models.Reserva> someVariable3 = Model.Listado[i].Listado.Where(x => x.NumeroEntregaDia == "F").OrderBy(ve => ve.NumeroEntregaDia); }
                        @foreach (var item in someVariable3)
                        {
                            contiene = true;
                            <div class="board-card label-2 tarjetaReserva ov-hidden"
                                 style="--colorTarjeta: @Html.DisplayFor(modelItem => item.ColorTipoEvento); --AltoTarjeta:@Html.DisplayFor(modelItem => item.TamanioTarjeta)px;"
                                 id="card-@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Vehiculo)">

                                <div class="row">
                                    <div class="col-sm d-inline-flex justify-content-between">
                                        <p class="black mb-2">Evento final del dia</p>
                                        @if (item.TamanioTarjeta < 180)
                                        {
                                            <p id="@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Id)-expandir"
                                               onclick="expandir('@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Id)-expandir', 'card-@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Id)-@Html.DisplayFor(modelItem => item.Vehiculo)', @Html.DisplayFor(modelItem => item.TamanioTarjeta))"
                                               estadoExpandir="true">
                                                <i class="arrow_carrot-down"></i>
                                            </p>
                                        }
                                    </div>
                                </div>
                                <p class="black mb-1"></p>
                                <p class="black mb-1"></p>
                                <p class="black mb-1"></p>
                                <p class="black mb-1"></p>

                                <div class="@(int.Parse(Html.DisplayFor(modelItem => item.TamanioTarjeta).ToString()) > 210 ? "d-flex flex-column justify-content-between" : "d-flex flex-row")">
                                    <div class="d-flex flex-row">
                                        <div class="m-1 d-flex justify-content-between align-items-center">
                                            <div class="left d-flex align-items-center">
                                                <img src="~/Content/assets/img/svg/watch.svg" alt="" class="svg mr-1">
                                                <a href="#" class="text_color font-12" data-toggle="tooltip" data-placement="top" title="Tiempo en Ruta">TR @Html.DisplayFor(modelItem => item.TiempoRuta) -</a>
                                            </div>
                                        </div>
                                        <div class="d-flex justify-content-between align-items-center m-1">
                                            <div class="left d-flex align-items-center">
                                                <img src="~/Content/assets/img/svg/watch.svg" alt="" class="svg mr-1">
                                                <a href="#" class="text_color font-12" data-toggle="tooltip" data-placement="top" title="Hora de llegada">HL @Html.DisplayFor(modelItem => item.FechaArmado)</a>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="m-1 d-flex justify-content-between align-items-center" style="@(int.Parse(Html.DisplayFor(modelItem => item.TamanioTarjeta).ToString()) > 210 ? "position: absolute;" : "")  bottom: 0;">
                                        <div class="left d-flex align-items-center">
                                            <img src="~/Content/assets/img/svg/watch.svg" alt="" class="svg mr-1">
                                            <a href="#" class="text_color font-12" data-toggle="tooltip" data-placement="top" title="Hora fin">HF @Html.DisplayFor(modelItem => item.FechaFin) </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        @if (!contiene)
                        {
                            <div class="board-card label-2" sinEntrega="true">
                                <div class="row">
                                    <div class="col-sm">
                                        <p class="black mb-2">Sin entregas programadas</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- End Boards Cards -->
                </div>
            }
            <!-- End Board -->


        </div>
    </div>
</div>
<!-- End Main Content -->

<script>
    $(function () {
        $(".board-card").mouseup(function () {
            $item = $(this).css("left").replace(/[^-\d\.]/g, '');;
            if ($item > 0 | $item < 0) {
                setTimeout(function () {
                    actualizarTablaDeEntregas()
                }, 1000);
            }
        });

        var arreglo = []
        function actualizarTablaDeEntregas() {
            var tabla = document.querySelectorAll(".board");
            tabla.forEach(function (element) {
                var id = element.getAttribute("id");
                var elementos = element.children[1];
                var elementos2 = elementos.getElementsByClassName("board-card");

                if (elementos2.length == 0) {
                    var atributo = $("[otro=" + element.getAttribute("otro") + "]")
                    var atributohijos = atributo.children();
                    var elemento = atributohijos[1];

                    var nuevoDiv = $('<div class="board-card label-2" sinEntrega="true"> <div class="row"> <div class="col-sm"> <p class="black mb-2">Sin entregas programadas</p> </div> </div > </div >');
                    nuevoDiv.appendTo(elemento);
                } else {
                    var atributo = $("[otro=" + element.getAttribute("otro") + "]")
                    var atributohijos = atributo.children();
                    var elemento = atributohijos[1].children;

                    if (atributohijos.length > 0) {
                        for (var i = 0; i < elemento.length; i++) {
                            if (elemento[i].getAttribute("sinentrega") == "true" && elemento.length > 1) {
                                console.log("contiene");
                                elemento[i].remove();
                            }
                        }

                        var texto = "";
                        for (var i = 0; i < elementos2.length; i++) {
                            texto += elementos2[i].getAttribute("id");
                            texto += ";";
                        }
                        arreglo.push(id + ";" + texto);
                    }
                }
            });

            enviarTablasDeEntregas(arreglo);
        }

        function enviarTablasDeEntregas(arreglo) {

            $("#barraProgreso").css("display", "flex");
            contadorBarraProgreso = 0;
            barraProgreso = 10;
            barraDeProgreso();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ActualizarVehiculo", "ReservasPorVehiculo")',

                dataType: 'json',
                data: {
                    id: arreglo.toString()
                },
                success: async function (states) {
                   ///* alert("Orden");*/
                   // Swal.fire({ title: "Excelente!", text: "Entregas ordenadas exitosamente!", type: "success", confirmButtonClass: "btn long", buttonsStyling: !1 });
                   // var delayInMilliseconds = 6000; //1 second

                   // setTimeout(function () {
                   //     //your code to be executed after 1 second
                   //     location.reload();
                   // }, delayInMilliseconds);
                    await Swal.fire({ title: "Excelente!", text: "Entregas ordenadas exitosamente!", type: "success", confirmButtonClass: "btn long", buttonsStyling: !1 });
                    contadorBarraProgreso = 10;
                    $("#barraProgresoContenido").css("width", "100%");
                    location.reload();
                },
                error: function (ex) {
                    Swal.fire({ title: "Error!", text: "Ocurrio un error al ordenes las entregas. Error:" + ex, type: "error", confirmButtonClass: "btn long", buttonsStyling: !1 });
                }
            })
        }

    })

    function expandir(idExpandir, idTarjeta, tamanioTarjeta) {
        console.log("=======================================================");
        console.log(idExpandir);
        console.log(idTarjeta);
        console.log(tamanioTarjeta);

        var estadoExpandir = $('#' + idExpandir).attr('estadoExpandir');
        console.log(estadoExpandir);

        if (estadoExpandir == "true") {
            console.log("adentro true");
            $('#' + idExpandir).attr('estadoExpandir', "false");
            $('#' + idTarjeta).css('overflow', 'initial')
            $("#" + idTarjeta).height(200);
        } else {
            console.log("adentro del else");
            $('#' + idExpandir).attr('estadoExpandir', "true");
            $('#' + idTarjeta).css('overflow', 'hidden');
            $("#" + idTarjeta).height(tamanioTarjeta);
        }
    }

    var contadorBarraProgreso;
    var barraProgreso = 10;
    function barraDeProgreso() {

        setTimeout(function () {
            $("#barraProgresoContenido").css("width", barraProgreso + "%");
            barraProgreso += 12
            contadorBarraProgreso++;
            if (contadorBarraProgreso < 6) {
                barraDeProgreso()
            }
        }, 1000);
    }

</script>


@section Scripts {

    <script src="~/Content/assets/plugins/jquery-ui/jquery-ui.min.js"></script>
    <script src="~/Content/assets/plugins/jquery-ui/jquery-ui.min.js"></script>
    <script src="~/Content/assets/plugins/datepicker/datepicker.min.js"></script>
    <script src="~/Content/assets/plugins/datepicker/i18n/datepicker.en.js"></script>
    <script src="~/Content/assets/plugins/timepicker/jquery.timepicker.min.js"></script>
    <script src="~/Content/assets/plugins/datepicker/custom-form-datepicker.js"></script>
    <script src="~/Content/assets/plugins/jquery-ui/jquery-ui.min.js"></script>
    <script src="~/Content/assets/plugins/moment/moment.min.js"></script>
    <script src="~/Content/assets/plugins/datepicker/datepicker.min.js"></script>
    <script src="~/Content/assets/plugins/timepicker/jquery.timepicker.min.js"></script>
    <script src="~/Content/assets/plugins/daterangepicker/daterangepicker.js"></script>
    <script src="~/Content/assets/plugins/datepicker/i18n/datepicker.en.js"></script>
    <script src="~/Content/assets/plugins/datepicker/i18n/datepicker-ar.js"></script>
    <script src="~/Content/assets/plugins/datepicker/i18n/datepicker-fr.js"></script>
    <script src="~/Content/assets/plugins/datepicker/i18n/datepicker-he.js"></script>
    <script src="~/Content/assets/plugins/datepicker/i18n/datepicker-zh-TW.js"></script>
    <script src="~/Content/assets/plugins/datepicker/custom-form-datepicker.js"></script>
}